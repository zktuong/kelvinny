GSE16879 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE16879.gset.RDS')#
ex <- exprs(GSE16879)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }#
symbol <- fData(GSE16879)$'Gene Symbol'#
exprs_df <- data.frame(symbol, exprs(GSE16879))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- exprs_df %>% distinct()
write.csv(exprs_mat, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/log2expr/GSE16879.Log2exprs.csv', row.names = FALSE, quote = FALSE)
gset <- getGEO("GSE51785", GSEMatrix =TRUE, AnnotGPL=TRUE)#
if (length(gset) > 1) idx <- grep("GPL15207", attr(gset, "names")) else idx <- 1#
gset <- gset[[idx]]#
saveRDS(gset, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE51785.gset.RDS')
GSE51785 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE51785.gset.RDS')#
ex <- exprs(GSE51785)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }#
symbol <- fData(GSE51785)$'Gene Symbol'
head(symbol)
exprs_df <- data.frame(symbol, exprs(GSE51785))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- exprs_df %>% distinct()
write.csv(exprs_mat, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/log2expr/GSE51785.Log2exprs.csv', row.names = FALSE, quote = FALSE)
gset <- getGEO("GSE59071", GSEMatrix =TRUE, AnnotGPL=TRUE)#
if (length(gset) > 1) idx <- grep("GPL6244", attr(gset, "names")) else idx <- 1#
gset <- gset[[idx]]
saveRDS(gset, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE51785.gset.RDS')
GSE51785 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE51785.gset.RDS')#
ex <- exprs(GSE51785)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }#
symbol <- fData(GSE51785)$'Gene Symbol'#
exprs_df <- data.frame(symbol, exprs(GSE51785))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- exprs_df %>% distinct()
symbol <- fData(GSE51785)$'Gene symbol'
symbol
names(fData(GSE51785))
head(fData(GSE51785))
fData(GSE51785)
library(Biobase)#
library(GEOquery)#
library(limma)#
library(genefilter)#
library(dplyr)#
# gset <- getGEO("GSE11223", GSEMatrix =TRUE, AnnotGPL=TRUE)#
# if (length(gset) > 1) idx <- grep("GPL1708", attr(gset, "names")) else idx <- 1#
# gset <- gset[[idx]]#
# saveRDS(gset, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE11223.gset.RDS')#
GSE11223 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE11223.gset.RDS')#
ex <- exprs(GSE11223)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) || (qx[6]-qx[1] > 50 && qx[2] > 0) || (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { #
	ex[which(ex <= 0)] <- NaN#
  	exprs(GSE11223) <- log2(ex) }#
symbol <- fData(GSE11223)$'Gene symbol'#
exprs_df <- data.frame(symbol, exprs(GSE11223))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- exprs_df %>% distinct()#
write.csv(exprs_df, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/log2expr/GSE11223.Log2exprs.csv', row.names = FALSE, quote = FALSE)#
#
# gset <- getGEO("GSE16879", GSEMatrix =TRUE, AnnotGPL=TRUE)#
# if (length(gset) > 1) idx <- grep("GPL570", attr(gset, "names")) else idx <- 1#
# gset <- gset[[idx]]#
# saveRDS(gset, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE16879.gset.RDS')#
GSE16879 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE16879.gset.RDS')#
ex <- exprs(GSE16879)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }#
symbol <- fData(GSE16879)$'Gene Symbol'#
exprs_df <- data.frame(symbol, exprs(GSE16879))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- exprs_df %>% distinct()#
write.csv(exprs_df, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/log2expr/GSE16879.Log2exprs.csv', row.names = FALSE, quote = FALSE)#
#
# gset <- getGEO("GSE51785", GSEMatrix =TRUE, AnnotGPL=TRUE)#
# if (length(gset) > 1) idx <- grep("GPL15207", attr(gset, "names")) else idx <- 1#
# gset <- gset[[idx]]#
saveRDS(gset, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE51785.gset.RDS')#
GSE51785 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE51785.gset.RDS')#
ex <- exprs(GSE51785)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }#
symbol <- fData(GSE51785)$'Gene symbol'#
exprs_df <- data.frame(symbol, exprs(GSE51785))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- exprs_df %>% distinct()#
write.csv(exprs_df, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/log2expr/GSE51785.Log2exprs.csv', row.names = FALSE, quote = FALSE)
GSE59071 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE59071.gset.RDS')#
ex <- exprs(GSE59071)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }#
symbol <- fData(GSE59071)$'Gene Symbol'
symbol
symbol <- fData(GSE59071)$'Gene symbol'
symbol
head(fData(GSE59071))
fData(GSE59071)$SPOT_ID
head(fData(GSE59071))
fData(GSE59071)$gene_assignment
GSE59071 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE59071.gset.RDS')#
ex <- exprs(GSE59071)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }#
symbol <- fData(GSE59071)$'gene_assignment'
library(Biobase)#
library(GEOquery)#
library(limma)#
library(genefilter)#
library(dplyr)
GSE59071 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE59071.gset.RDS')#
ex <- exprs(GSE59071)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }#
symbol <- fData(GSE59071)$'gene_assignment'
length(symbol)
symbol
dim(exprs(GSE59071))
length(symbol)
exprs_df <- data.frame(symbol, exprs(GSE59071))
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[-which(exprs_df[,1] == '---'), ]
dim(exprs_df)
str(fData(GSE59071))
symbol <- fData(GSE59071)$'mrna_assignment'
exprs_df <- data.frame(symbol, exprs(GSE59071))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[-which(exprs_df[,1] == '---'), ]
dim(exprs_df)
dat <- read.delim('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GPL6244_noParents.an.txt')
head(dat)
dat <- read.delim('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GPL6244_noParents.an.txt')
head(dat)
head(fData(GSE59071)
)
symbol_idx <- match(fData(GSE59071)$'ID', dat$ProbeName)
length(dat$probeName)
length(dat$ProbeName)
length(fData(GSE59071)$'ID')
symbol_idx
length(fData(GSE59071)$'ID')
length(symbol_idx)
head(symbol_idx)
length(symbol_idx)
length(dat$ProbeName)
symbol <- dat$ProbeName[symbol_idx]
head(symbol)
head(dat$ProbeName)
head(dat)
symbol <- dat$GeneSymbols[symbol_idx]
symbol
head(symbol)
exprs_df <- data.frame(symbol, exprs(GSE59071))
head(exprs_df)
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[-which(exprs_df[,1] == '---'), ]
dim(exprs_df)
exprs_df <- data.frame(symbol, exprs(GSE59071))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]
head(exprs_df()
head(exprs_df)
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- exprs_df %>% distinct()
write.csv(exprs_df, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/log2expr/GSE59071.Log2exprs.csv')
gset <- getGEO("GSE73661", GSEMatrix =TRUE, AnnotGPL=TRUE)#
if (length(gset) > 1) idx <- grep("GPL6244", attr(gset, "names")) else idx <- 1#
gset <- gset[[idx]]
saveRDS(gset, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE73661.gset.RDS')
GSE73661 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE73661.gset.RDS')#
ex <- exprs(GSE73661)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }#
dat <- read.delim('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GPL6244_noParents.an.txt')#
symbol_idx <- match(fData(GSE73661)$'ID', dat$ProbeName)#
symbol <- dat$GeneSymbols[symbol_idx]#
exprs_df <- data.frame(symbol, exprs(GSE73661))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- exprs_df %>% distinct()
dim(exprs_df)
write.csv(exprs_df, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/log2expr/GSE73661.Log2exprs.csv', row.names = FALSE, quote = FALSE)
GSE59071 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE59071.gset.RDS')#
ex <- exprs(GSE59071)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }#
dat <- read.delim('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GPL6244_noParents.an.txt')#
symbol_idx <- match(fData(GSE59071)$'ID', dat$ProbeName)#
symbol <- dat$GeneSymbols[symbol_idx]#
exprs_df <- data.frame(symbol, exprs(GSE59071))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- exprs_df %>% distinct()#
write.csv(exprs_df, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/log2expr/GSE59071.Log2exprs.csv', row.names = FALSE, quote = FALSE)
gset <- getGEO("GSE75214", GSEMatrix =TRUE, AnnotGPL=TRUE)#
if (length(gset) > 1) idx <- grep("GPL6244", attr(gset, "names")) else idx <- 1#
gset <- gset[[idx]]#
saveRDS(gset, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE75214.gset.RDS')
GSE75214 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE75214.gset.RDS')#
ex <- exprs(GSE75214)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }#
dat <- read.delim('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GPL6244_noParents.an.txt')#
symbol_idx <- match(fData(GSE75214)$'ID', dat$ProbeName)#
symbol <- dat$GeneSymbols[symbol_idx]#
exprs_df <- data.frame(symbol, exprs(GSE75214))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- exprs_df %>% distinct()
write.csv(exprs_df, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/log2expr/GSE75214.Log2exprs.csv', row.names = FALSE, quote = FALSE)
gset <- getGEO("GSE87473", GSEMatrix =TRUE, AnnotGPL=TRUE)#
if (length(gset) > 1) idx <- grep("GPL13158", attr(gset, "names")) else idx <- 1#
gset <- gset[[idx]]
saveRDS(gset, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE87473.gset.RDS')
ex <- exprs(GSE87473)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }
GSE87473 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE87473.gset.RDS')#
ex <- exprs(GSE87473)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }#
symbol <- fData(GSE87473)$'Gene symbol'
symbol
exprs_df <- data.frame(symbol, exprs(GSE87473))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- exprs_df %>% distinct()
write.csv(exprs_df, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/log2expr/GSE87473.Log2exprs.csv', row.names = FALSE, quote = FALSE)
gset <- getGEO("GSE107499", GSEMatrix =TRUE, AnnotGPL=FALSE)#
if (length(gset) > 1) idx <- grep("GPL15207", attr(gset, "names")) else idx <- 1#
gset <- gset[[idx]]#
saveRDS(gset, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE107499.gset.RDS')
GSE107499 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE107499.gset.RDS')#
ex <- exprs(GSE107499)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }#
symbol <- fData(GSE107499)$'Gene symbol'
head(symbol)
symbol <- fData(GSE107499)$'Gene Symbol'
head(symbol)
exprs_df <- data.frame(symbol, exprs(GSE107499))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- exprs_df %>% distinct()
write.csv(exprs_df, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/log2expr/GSE107499.Log2exprs.csv', row.names = FALSE, quote = FALSE)
gset <- getGEO("GSE107499", GSEMatrix =TRUE, AnnotGPL=TRUE)#
if (length(gset) > 1) idx <- grep("GPL15207", attr(gset, "names")) else idx <- 1#
gset <- gset[[idx]]#
saveRDS(gset, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE107499.gset.RDS')#
GSE107499 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE107499.gset.RDS')#
ex <- exprs(GSE107499)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }#
symbol <- fData(GSE107499)$'Gene Symbol'#
exprs_df <- data.frame(symbol, exprs(GSE107499))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- exprs_df %>% distinct()#
write.csv(exprs_df, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/log2expr/GSE107499.Log2exprs.csv', row.names = FALSE, quote = FALSE)
gset <- getGEO("GSE12251", GSEMatrix =TRUE, AnnotGPL=TRUE)#
if (length(gset) > 1) idx <- grep("GPL570", attr(gset, "names")) else idx <- 1#
gset <- gset[[idx]]#
saveRDS(gset, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE12251.gset.RDS')
gset
GSE12251 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE12251.gset.RDS')#
ex <- exprs(GSE12251)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(gset) <- log2(ex) }#
symbol <- fData(GSE12251)$'Gene Symbol'
symbol
symbol <- fData(GSE12251)$'Gene symbol'
head(symbol)
exprs_df <- data.frame(symbol, exprs(GSE12251))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- exprs_df %>% distinct()
head(exprs_df)
write.csv(exprs_df, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/log2expr/GSE12251.Log2exprs.csv', row.names = FALSE, quote = FALSE)
head()
write.csv(pData(GSE12251), 'GSE12251.sampleTable.csv')
getwd
getwd()
library(Biobase)#
library(GEOquery)#
library(limma)#
library(genefilter)#
library(dplyr)
gset <- getGEO("GSE51785", GSEMatrix =TRUE, AnnotGPL=TRUE)#
if (length(gset) > 1) idx <- grep("GPL15207", attr(gset, "names")) else idx <- 1#
gset <- gset[[idx]]#
saveRDS(gset, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE51785.gset.RDS')
gset
saveRDS(gset, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE51785.gset.RDS')
GSE51785 <- readRDS('~/Documents/Clatworthy_scRNAseq/Tom/datasets/gset/GSE51785.gset.RDS')#
ex <- exprs(GSE51785)#
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))#
LogC <- (qx[5] > 100) ||#
          (qx[6]-qx[1] > 50 && qx[2] > 0) ||#
          (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)#
if (LogC) { ex[which(ex <= 0)] <- NaN#
  exprs(GSE51785) <- log2(ex) }#
symbol <- fData(GSE51785)$'Gene symbol'#
exprs_df <- data.frame(symbol, exprs(GSE51785))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- distinct(exprs_df, symbol, .keep_all = TRUE)
symbol <- fData(GSE51785)$'Gene Symbol'
head(symbol)
exprs_df <- data.frame(symbol, exprs(GSE51785))#
exprs_df <- exprs_df[-which(exprs_df[,1] == ''), ]#
exprs_df <- exprs_df[order(rowVars(exprs_df[,2:ncol(exprs_df)], na.rm = TRUE), decreasing = TRUE), ]#
exprs_df <- distinct(exprs_df, symbol, .keep_all = TRUE)
head(exprs_df)
write.csv(exprs_df, '~/Documents/Clatworthy_scRNAseq/Tom/datasets/log2expr/GSE51785.Log2exprs.csv', row.names = FALSE, quote = FALSE)
library(MetaIntegrator)
sleData <- getGEOData(c("GSE11223", "GSE73661","GSE16879", "GSE51785", "GSE59071", "GSE75214", "GSE87473", "GSE107499"))
gg_color_hue <- function(n) {#
    hues = seq(15, 375, length = n + 1)#
    hcl(h = hues, l = 65, c = 100)[1:n]#
  }
gg_color_hue(3)
library(DropletUtils)
?emptyDrops
set.seed(42)
library(Seurat)
devtools::install_github("rstudio/reticulate")
remove.packages(reticulate)
remove.packages("reticulate")
devtools::install_github("rstudio/reticulate")
pxAd
library(Seurat)
?RunPCA
?RunUMAP
library(Seurat)
?FilterCells
library("scPred")#
library("tidyverse")
require(SingleCellExperiment)#
pollen <- readRDS("~/Downloads/pollen.rds")
pollen
pollen_counts <- normcounts(pollen)#
pollen_cpm  <- apply(pollen_counts, 2, function(x) (x/sum(x))*1000000)#
pollen_metadata <- as.data.frame(colData(pollen))
head(pollen_cpm)
table(pollen_metadata$cell_type2)
set.seed(1234)#
i <- createDataPartition(pollen_metadata$cell_type2, p = 0.70, list = FALSE)#
train_data <- t(pollen_cpm[, i])#
test_data <- t(pollen_cpm[, -i])#
#
train_info <- pollen_metadata[i, , drop = FALSE]#
test_info <- pollen_metadata[-i, , drop = FALSE]
head(train_info)
set.seed(1234)#
scp <- eigenDecompose(train_data, n = 10)
scPred::metadata(scp) <- train_info
head(row.names(train_info))
head(rownames(getPCA(scp)))
library("scPred")#
library("tidyverse")
require(SingleCellExperiment)#
pollen <- readRDS("~/Downloads/pollen.rds")
pollen_counts <- normcounts(pollen)#
pollen_cpm  <- apply(pollen_counts, 2, function(x) (x/sum(x))*1000000)#
pollen_metadata <- as.data.frame(colData(pollen))
set.seed(1234)#
i <- createDataPartition(pollen_metadata$cell_type2, p = 0.70, list = FALSE)#
train_data <- t(pollen_cpm[, i])#
test_data <- t(pollen_cpm[, -i])#
#
train_info <- pollen_metadata[i, , drop = FALSE]#
test_info <- pollen_metadata[-i, , drop = FALSE]
set.seed(1234)#
scp <- eigenDecompose(train_data, n = 10)
scPred::metadata(scp) <- train_info
scp@metadata <- train_info
scp <- getFeatureSpace(scp, pVar = "cell_type2")
getFeatureSpace
str(scp)
show(scp)
getFeatureSpace <- function(object, pVar, varLim = 0.01, correction = "fdr", sig = 0.05){
object <- scp
classes <- metadata(object)[[pVar]]
classes <- scPred::metadata(object)[[pVar]]
classes <- scPred::metadata(object)[["cellType"]]
classes
object
str(object)
classes <- scPred::metadata(object)[["cell_type2"]]
classes
varLim = 0.01
i <- object@expVar > varLim
i
ca <- getPCA(object)[, i]
pca <- getPCA(object)[, i]#
        expVar <- object@expVar
pca
expVar
i <- object@dr[["pca"]]@sdev > varLim#
        pca <- object@dr[["pca"]]@cell.embeddings[, i]
scp
str(spc)
str(scp)
scp@dr
uniqueClasses <- unique(classes)
uniqueClasses
isValidName <- uniqueClasses == make.names(uniqueClasses)
isValidNames
isValidName
if (!all(isValidName)) {#
        invalidClasses <- paste0(uniqueClasses[!isValidName], #
            collapse = "\n")#
        message("Not all the classes are valid R variable names\n")#
        message("The following classes are renamed: \n", invalidClasses)#
        classes <- make.names(classes)#
        classes <- factor(classes, levels = unique(classes))#
        newPvar <- paste0(pVar, ".valid")#
        object@metadata[[newPvar]] <- classes#
        message("\nSee new classes in '", pVar, ".valid' column in metadata:")#
        message(paste0(levels(classes)[!isValidName], collapse = "\n"), #
            "\n")#
        pVar <- newPvar#
    }
pVar
if (length(levels(classes)) == 2) {#
        message("First factor level in '", pVar, "' metadata column considered as positive class")#
        res <- .getFeatures(levels(classes)[1], expVar, classes, #
            pca, correction, sig)#
        res <- list(res)#
        names(res) <- levels(classes)[1]#
    }
res <- pblapply(levels(classes), .getFeatures, expVar, #
            classes, pca, correction, sig)#
        names(res) <- levels(classes)
correction = "fdr"
sig = 0.05
res <- .getFeatures(levels(classes)[1], expVar, classes, #
            pca, correction, sig)#
        res <- list(res)#
        names(res) <- levels(classes)[1]
res <- scPred::.getFeatures(levels(classes)[1], expVar, classes, #
            pca, correction, sig)#
        res <- list(res)#
        names(res) <- levels(classes)[1]
install.packages("HELP")
res <- HELP::getFeatures(levels(classes)[1], expVar, classes, #
            pca, correction, sig)
getFeatureSpace()
getFeatureSpace(,scPred)
getFeatureSpace(scp)
getFeatureSpace(scp, pVar = "cell_type2")
getFeatureSpace
.getFeatures
library(Seurat)
ClassifyCells
?SubsetData
SubsetData
?ClassifyCells
library(Seurat)
?ClassifyCells
library(dplyr)
?ClassifyCells
ClassifyCells
ClassifyCells()
library(Seurat)
instinstall.packages('Seurat')
install.packages('Seurat')
library(Seurat)
install.packages('hdf5r')
library(Seurat)
remove.packages('hdf5r')
remove.packages('Seurat')
install.packages('Seurat')
library(Seurat)
library(ranger)
?predict.ranger
install.packages("Seurat")
library(Seurat)
remove.package('Seurat')
remove.packages('Seurat')
library(Seurat)
install.packages('Seurat')
library(Seurat)
install.packages('mvtnorm')
install.packages('Seurat')
library(Seurat)
?RunTSNE
RunUMAP
library(kelvinny)
devtools::install_github("zktuong/kelvinny", dependencies = TRUE)
library(Seurat)
library(SingleCellExperiment)
library(dplyr)
library(bioMart)
library(biomart)
library(Biomart)
library(BioMart)
biomart
devtools::install_github("zktuong/kelvinny", dependencies = TRUE)
library(kelvinny)
library(roxygen2)
setwd("~/Documents/GitHub/kelvinny")
